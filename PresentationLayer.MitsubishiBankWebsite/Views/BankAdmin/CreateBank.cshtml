@model PresentationLayer.MitsubishiBankWebsite.Models.Bank.BankCreateBaseModel

@{
    ViewBag.Title = "CreateBank";
}

<h2>Bank Management Section : Deploy new Bank</h2>


@using (Html.BeginForm()) 
{
    @Html.AntiForgeryToken()
    

    <div class="form-horizontal">
        <h4>BankCreateBaseModel</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            @Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
            </div>
        </div>
        <br/>
        <br/>
        <br/>
        <div class="form-group">
            @Html.LabelFor(model => model.Code, htmlAttributes: new {@class = "control-label col-md-2"})
            <div class="col-md-10">
                @Html.EditorFor(model => model.Code, new {htmlAttributes = new {@class = "form-control"}})
                @Html.ValidationMessageFor(model => model.Code, "", new {@class = "text-danger"})
            </div>
        </div>
        <br />
        <br />

        <div class="form-group">
            @Html.LabelFor(model => model.Country, htmlAttributes: new {@class = "control-label col-md-2"})
            <div class="col-md-10">
                @Html.EditorFor(model => model.Country, new {htmlAttributes = new {@class = "form-control"}})
                @Html.ValidationMessageFor(model => model.Country, "", new {@class = "text-danger"})
            </div>
        </div>
        <br />
        <br />

        <div class="form-group">
            @Html.LabelFor(model => model.Location, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Location, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Location, "", new { @class = "text-danger" })
            </div>
        </div>
        <br />
        <br/>

        <div class="form-group">
            @Html.LabelFor(model => model.AccountName, htmlAttributes: new {@class = "control-label col-md-2"})
            <div class="col-md-10">
                @Html.EditorFor(model => model.AccountName, new {htmlAttributes = new {@class = "form-control"}})
                @Html.ValidationMessageFor(model => model.AccountName, "", new {@class = "text-danger"})
            </div>
        </div>
        <br />
        <br />

        <div class="form-group">
            @Html.LabelFor(model => model.AccountCode, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.AccountCode, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.AccountCode, "", new { @class = "text-danger" })
            </div>
        </div>
        <br />
        <br/>

        <div class="form-group">
            @Html.LabelFor(model => model.TotalFinanceAmount, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.TotalFinanceAmount, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.TotalFinanceAmount, "", new { @class = "text-danger" })
            </div>
        </div>

        <br />
        <br/>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Create" class="btn btn-default" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
